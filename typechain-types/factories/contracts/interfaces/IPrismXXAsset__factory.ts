/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPrismXXAsset,
  IPrismXXAssetInterface,
} from "../../../contracts/interfaces/IPrismXXAsset";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
    ],
    name: "getERC1155Info",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
    ],
    name: "getERC20Info",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
    ],
    name: "getERC721Info",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
    ],
    name: "getTokenType",
    outputs: [
      {
        internalType: "enum IPrismXXAsset.TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
    ],
    name: "isBurn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setERC1155Info",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setERC20Info",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_asset",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setERC721Info",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPrismXXAsset__factory {
  static readonly abi = _abi;
  static createInterface(): IPrismXXAssetInterface {
    return new utils.Interface(_abi) as IPrismXXAssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPrismXXAsset {
    return new Contract(address, _abi, signerOrProvider) as IPrismXXAsset;
  }
}
